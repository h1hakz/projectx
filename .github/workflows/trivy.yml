name: trivy

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  schedule:
    - cron: '40 5 * * 2'

permissions:
  contents: read
  pull-requests: write

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy jq

      # Docker scan
      - name: Trivy Image Scan
        id: image_scan
        run: |
          if [ -f Dockerfile ]; then
            docker build -t my-app:${{ github.sha }} .
            trivy image --severity CRITICAL,HIGH --format json --quiet my-app:${{ github.sha }} > trivy-image.json || true
            count=$(jq '.Results[].Vulnerabilities | length' trivy-image.json 2>/dev/null | awk '{s+=$1} END {print s+0}')
            summary="No issues"
            details=""
            if [ "$count" -gt 0 ]; then
              summary="$count issues"
              details=$(jq -r '.Results[].Vulnerabilities[] | "\(.VulnerabilityID) - \(.PkgName)@\(.InstalledVersion)"' trivy-image.json | head -5)
            fi
            echo "summary=$summary" >> $GITHUB_OUTPUT
            echo "details<<EOF" >> $GITHUB_OUTPUT
            echo "$details" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "summary=No Dockerfile found" >> $GITHUB_OUTPUT
            echo "details=" >> $GITHUB_OUTPUT
          fi

      # Terraform scan
      - name: Trivy Terraform Scan
        id: tf_scan
        run: |
          trivy config --severity CRITICAL,HIGH --format json --quiet . > trivy-tf.json || true
          count=$(jq '.Results[].Misconfigurations | length' trivy-tf.json 2>/dev/null | awk '{s+=$1} END {print s+0}')
          summary="No issues"
          details=""
          if [ "$count" -gt 0 ]; then
            summary="$count issues"
            details=$(jq -r '.Results[].Misconfigurations[] | "\(.ID) - \(.Message)"' trivy-tf.json | head -5)
          fi
          echo "summary=$summary" >> $GITHUB_OUTPUT
          echo "details<<EOF" >> $GITHUB_OUTPUT
          echo "$details" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Comment results on PR
      - name: Comment results
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üõ°Ô∏è **Trivy Scan Results**

            **Docker Image**
            - Summary: **${{ steps.image_scan.outputs.summary }}**
            ${{ steps.image_scan.outputs.details }}

            **Terraform IaC**
            - Summary: **${{ steps.tf_scan.outputs.summary }}**
            ${{ steps.tf_scan.outputs.details }}
