# .github/workflows/codeql-analysis.yml
name: "CodeQL - custom filtering (exclude py/sql-injection, Critical only)"

on:
  push:
  pull_request:

permissions:
  actions: read
  contents: read
  security-events: write   # required to upload SARIF

jobs:
  codeql:
    name: CodeQL Scan (filtered)
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          # Use the config file that excludes py/sql-injection
          config-file: .github/codeql/codeql-config.yml
          # Specify languages scanned by your repo; adjust as needed.
          # For a Python-only repo use: python
          # For multi-language repos list them comma-separated: "javascript,python,java"
          languages: python

      - name: Autobuild (optional; required for some languages)
        uses: github/codeql-action/autobuild@v3
        # If your repo does not require a build step for CodeQL, you can remove/skip this step.

      - name: Run CodeQL analysis (produce SARIF, do not upload yet)
        uses: github/codeql-action/analyze@v3
        with:
          output: sarif-results/codeql.sarif
          upload: 'never'

      - name: Ensure sarif-results exists
        run: mkdir -p sarif-results

      - name: Remove py/sql-injection results from SARIF
        # This jq expression removes any result with ruleId == "py/sql-injection"
        run: |
          if [ ! -f sarif-results/codeql.sarif ]; then
            echo "SARIF not found: sarif-results/codeql.sarif"
            exit 1
          fi
          jq '(.runs[]? |= ( .results = ( (.results // []) | map(select(.ruleId != "py/sql-injection")) ) ))' \
            sarif-results/codeql.sarif > sarif-results/codeql.nosql.sarif

      - name: Keep only Critical severity results
        # This jq is defensive: it checks common SARIF locations for severity information.
        run: |
          jq '
            # For each run, replace .results with only those that should be kept
            .runs = (.runs | map(
              ( . as $run |
                .results = ( ($run.results // []) | map(
                  select(
                    # keep if SARIF "level" is "error"
                    ( .level == "error" )
                    or
                    # or the result has properties.security-severity == "critical"
                    ( ( .properties["security-severity"]? // "" ) | ascii_downcase == "critical" )
                    or
                    # or the rule referenced by ruleIndex has properties.security-severity == "critical"
                    (
                      ( .ruleIndex? | type == "number" ) and
                      (
                        ( ($run.tool.driver.rules[.ruleIndex].properties["security-severity"]? // "") | ascii_downcase ) == "critical"
                      )
                    )
                  )
                ))
              )
            ))
          ' sarif-results/codeql.nosql.sarif > sarif-results/codeql.critical.sarif

      - name: (optional) Show counts of results at each stage for debugging
        run: |
          echo "Original total results:"
          jq '[.runs[]?.results[]? | .ruleId] | length' sarif-results/codeql.sarif || true
          echo "After removing py/sql-injection:"
          jq '[.runs[]?.results[]? | .ruleId] | length' sarif-results/codeql.nosql.sarif || true
          echo "After keeping only Critical:"
          jq '[.runs[]?.results[]? | .ruleId] | length' sarif-results/codeql.critical.sarif || true

      - name: Upload filtered SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-results/codeql.critical.sarif
